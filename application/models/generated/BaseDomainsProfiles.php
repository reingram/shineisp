<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DomainsProfiles', 'doctrine');

/**
 * BaseDomainsProfiles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profile_id
 * @property string $company
 * @property string $firstname
 * @property string $lastname
 * @property string $gender
 * @property string $email
 * @property string $phone
 * @property string $fax
 * @property date $birthdate
 * @property string $birthplace
 * @property string $birthdistrict
 * @property string $birthcountry
 * @property string $birthnationality
 * @property string $address
 * @property string $zip
 * @property string $city
 * @property string $area
 * @property integer $country_id
 * @property string $taxpayernumber
 * @property string $vat
 * @property integer $type_id
 * @property integer $legalform_id
 * @property integer $status_id
 * @property integer $customer_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property CompanyTypes $CompanyTypes
 * @property Legalforms $Legalforms
 * @property Statuses $Statuses
 * @property Customers $Customers
 * @property Countries $Countries
 * @property Doctrine_Collection $DomainsNichandle
 * @property Doctrine_Collection $CustomersDomainsRegistrars
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDomainsProfiles extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('domains_profiles');
        $this->hasColumn('profile_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('company', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));
        $this->hasColumn('gender', 'string', 1, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '1',
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));
        $this->hasColumn('phone', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));
        $this->hasColumn('fax', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('birthdate', 'date', 25, array(
             'type' => 'date',
             'notnull' => false,
             'length' => '25',
             ));
        $this->hasColumn('birthplace', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '200',
             ));
        $this->hasColumn('birthdistrict', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('birthcountry', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('birthnationality', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('address', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '10',
             ));
        $this->hasColumn('city', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('area', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('taxpayernumber', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '20',
             ));
        $this->hasColumn('vat', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '20',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('legalform_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => '4',
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('customer_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CompanyTypes', array(
             'local' => 'type_id',
             'foreign' => 'type_id',
             'onDelete' => 'Set Null'));

        $this->hasOne('Legalforms', array(
             'local' => 'legalform_id',
             'foreign' => 'legalform_id',
             'onDelete' => 'Set Null'));

        $this->hasOne('Statuses', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasOne('Customers', array(
             'local' => 'customer_id',
             'foreign' => 'customer_id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Countries', array(
             'local' => 'country_id',
             'foreign' => 'country_id',
             'onDelete' => 'Set Null'));

        $this->hasMany('DomainsNichandle', array(
             'local' => 'profile_id',
             'foreign' => 'profile_id'));

        $this->hasMany('CustomersDomainsRegistrars', array(
             'local' => 'profile_id',
             'foreign' => 'profile_id'));
    }
}